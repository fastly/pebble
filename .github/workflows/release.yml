name: Build Release
# Run on release tags only.
on:
  push:
    tags:
      - v*
permissions:
  contents: read
  packages: write # Allow docker/build-push-action to publish to GitHub Container Registry
  pull-requests: read
env:
  DOCKER_PLATFORMS: linux/amd64, linux/arm64, windows/amd64
  DOCKER_IMAGE_BASENAME: ghcr.io/${{ github.repository }}
jobs:
  go-build:
    env:
      CGO_ENABLED: 0
      GOARCH: ${{ matrix.go-arch }}
      GOOS: ${{ matrix.go-os }}
      LDFLAGS: -s -w -X main.version=${{ github.sha }}
      OUTPUTDIR: /tmp/dist/${{ matrix.go-os }}/${{ matrix.go-arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - pebble
          - pebble-challtestsrv
        go-arch:
          - amd64
          - arm64
        go-os:
          - darwin
          - linux
          - windows
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          check-latest: true
          go-version-file: go.mod
      - name: Build ${{ matrix.app }} for ${{ matrix.go-os }}/${{ matrix.go-arch }}
        run: |
          go build \
            -ldflags="${LDFLAGS}" \
            -o "${OUTPUTDIR}/" \
            -trimpath \
            -v \
            ./cmd/${{ matrix.app }}
      - name: Display ${{ matrix.app }} artifacts
        run: ls -lR /tmp/dist
      - name: Store ${{ matrix.app }} artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.app }}-${{ matrix.go-os }}-${{ matrix.go-arch }}
          path: /tmp/dist
  docker-build:
    needs:
      - go-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        app:
          - pebble
          - pebble-challtestsrv
    steps:
      - name: Download ${{ matrix.app }} artifacts
        uses: actions/download-artifact@v4
        with:
          merge-multiple: true
          path: ./dist
          pattern: ${{ matrix.app }}-*-*
      - name: Display ${{ matrix.app }} artifacts
        run: ls -lR ./dist
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.DOCKER_IMAGE_BASENAME }}/${{ matrix.app }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=semver,pattern={{major}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{version}}
            type=sha
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push ${{ github.repository }}/${{ matrix.app }} for ${{ env.DOCKER_PLATFORMS }}
        uses: docker/build-push-action@v5
        with:
          build-args: APP=${{ matrix.app }}
          build-contexts: dist-files=./dist
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: Dockerfile.release
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ env.DOCKER_PLATFORMS }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
